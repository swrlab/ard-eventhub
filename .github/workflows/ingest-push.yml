
name: ingest push


on:
  push:
    branches:
    - feature/*
    - dev/*
    - main


env:
  NODE_VERSION: 14.5
  IMAGE_NAME: de.swr.ard.eventhub/ingest
  REGISTRY_DOMAIN: eu.gcr.io
  GCP_RUN_REGION: europe-west1
  GCP_RUN_MEMORY: 256Mi
  GCP_RUN_TIMEOUT: 60


jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        STAGES: [dev]
    steps:
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Checkout repo üëÄ
      uses: actions/checkout@v2.3.4

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Install Dependencies
      run: yarn

    - name: üîë Setup Google Cloud Auth
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: Run Ingest Tests
      env:
        STAGE: ${{ matrix.STAGES }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        FIREBASE_API_KEY: ${{ secrets.TEST_FIREBASE_API_KEY }}
        TEST_USER: ${{ secrets.TEST_USER }}
        TEST_USER_PW: ${{ secrets.TEST_USER_PW }}
      run: yarn ingest:test


  docker:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      BRANCH: ${{ steps.push.outputs.BRANCH }}
      VERSION: ${{ steps.push.outputs.VERSION }}
    steps:
    - name: üëÄ Checkout repo
      uses: actions/checkout@v2.3.4
      
    - name: üîë Setup Google Cloud Auth
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
        
    - name: üîë Login to Registry
      run: "gcloud auth configure-docker $REGISTRY_DOMAIN"

    - name: üöß Building docker image
      run: "docker build ./ --file ./Dockerfile.ingest -t image"

    - name: üè∑ Tagging & Pushing docker
      id: push
      run: |
        # Strip git ref prefix from version
        BRANCH=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && BRANCH=$(echo $BRANCH | sed -e 's/^v//')

        # Add custom wrapper syntax
        VERSION=g${{ github.run_number }}-d$(date +%j)-$BRANCH-${{ github.actor }}-$GITHUB_SHA

        # Set registry
        IMAGE_URI=$REGISTRY_DOMAIN/${{ secrets.GCP_PROJECT_ID }}/$IMAGE_NAME:$VERSION

        # Push image to registry
        docker tag image $IMAGE_URI
        docker push $IMAGE_URI

        # Update vars
        echo "::set-output name=BRANCH::$BRANCH"
        echo "::set-output name=VERSION::$VERSION"

        # Print vars
        echo "::warning docker::BRANCH $BRANCH"
        echo "::warning docker::VERSION $VERSION"

    - name: üëã Logout
      run: "docker logout"

  deploy-A-dev-cloud-run:
    environment: dev
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: üîë Setup Google Cloud Auth
      uses: google-github-actions/setup-gcloud@master
      with:
        service_account_key: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: üß™ Add gcloud beta
      run: "gcloud components install beta"

    - name: üè† Set Cloud Run environment
      run: "gcloud config set run/platform managed"

    - name: üó∫ Set Cloud Run region
      run: "gcloud config set run/region $GCP_RUN_REGION"

    - name: üöÄ Deploy main revision
      run: |
        gcloud beta run deploy ard-eventhub-ingest-dev \
          --image $REGISTRY_DOMAIN/${{ secrets.GCP_PROJECT_ID }}/$IMAGE_NAME:${{ needs.docker.outputs.VERSION }} \
          --quiet \
          --verbosity error \
          --project ${{ secrets.GCP_PROJECT_ID }} \
          --allow-unauthenticated \
          --timeout $GCP_RUN_TIMEOUT \
          --memory $GCP_RUN_MEMORY \
          --update-env-vars STAGE=dev,DD_TRACER_ENABLED=false \
          --service-account ${{ secrets.GCP_SERVICE_ACCOUNT_INGEST }}

  deploy-B-test-kubernetes:
    if: "github.ref == 'refs/heads/main'"
    environment: test
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: üöÄ Trigger deployment to test
      run: |
        curl --location --request POST '${{ secrets.ARD_DEPLOYMENT_HOST }}' \
        --header 'Authorization: Basic ${{ secrets.ARD_DEPLOYMENT_TOKEN }}' \
        --form 'UMGEBUNG="test"' \
        --form 'COMPONENT="eventhub-ingest"' \
        --form 'VERSION="${{ needs.docker.outputs.VERSION }}"'

  deploy-C-beta-kubernetes:
    if: "github.ref == 'refs/heads/main'"
    environment: beta
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: üöÄ Trigger deployment to beta
      run: |
        curl --location --request POST '${{ secrets.ARD_DEPLOYMENT_HOST }}' \
        --header 'Authorization: Basic ${{ secrets.ARD_DEPLOYMENT_TOKEN }}' \
        --form 'UMGEBUNG="beta"' \
        --form 'COMPONENT="eventhub-ingest"' \
        --form 'VERSION="${{ needs.docker.outputs.VERSION }}"'
