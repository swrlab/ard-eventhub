
name: ingest push

on:
  push:
    branches:
    - feature/*
    - dev/*
  pull_request:
    types: [ closed ]

env:
  NODE_VERSION: 16.14.2
  IMAGE_NAME: de.swr.ard.eventhub/ingest
  REGISTRY_DOMAIN: eu.gcr.io

jobs:
  security:
    name: Check permissions for action runs
    runs-on: ubuntu-latest
    if: "github.event.pull_request.merged == true || github.event_name == 'push'"
    steps:
    - run: |
        echo "Security checks passed!"

  test:
    needs: security
    runs-on: ubuntu-latest
    strategy:
      matrix:
        STAGES: [dev]
    steps:
    - name: Checkout repo üëÄ
      uses: actions/checkout@v3

    - uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
        cache-dependency-path: '**/yarn.lock'

    - name: Install Dependencies
      run: yarn

    - name: üîë Setup Google Cloud Auth
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true

    - name: Run Ingest Tests
      env:
        STAGE: ${{ matrix.STAGES }}
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        FIREBASE_API_KEY: ${{ secrets.TEST_FIREBASE_API_KEY }}
        TEST_USER: ${{ secrets.TEST_USER }}
        TEST_USER_PW: ${{ secrets.TEST_USER_PW }}
        PUBSUB_SERVICE_ACCOUNT_EMAIL_INTERNAL: ${{ secrets.PUBSUB_SERVICE_ACCOUNT_EMAIL }}
      run: yarn ingest:test

  docker:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      BRANCH: ${{ steps.push.outputs.BRANCH }}
      VERSION: ${{ steps.push.outputs.VERSION }}
    steps:
    - name: üëÄ Checkout repo
      uses: actions/checkout@v3
      
    - name: üîë Setup Google Cloud Auth
      uses: google-github-actions/setup-gcloud@v0
      with:
        service_account_key: ${{ secrets.GCP_GITHUB_SERVICE_ACCOUNT_KEY }}
        export_default_credentials: true
        
    - name: üîë Login to Registry
      run: "gcloud auth configure-docker $REGISTRY_DOMAIN"

    - name: üöß Building docker image
      run: "docker build ./ --file ./Dockerfile -t image"

    - name: üè∑ Tagging & Pushing docker
      id: push
      run: |
        # Strip git ref prefix from version
        BRANCH=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && BRANCH=$(echo $BRANCH | sed -e 's/^v//')

        # Add custom wrapper syntax
        VERSION=g${{ github.run_number }}-d$(date +%j)-$BRANCH-${{ github.actor }}-$GITHUB_SHA

        # Set registry
        IMAGE_URI=$REGISTRY_DOMAIN/${{ secrets.GCP_PROJECT_ID }}/$IMAGE_NAME:$VERSION

        # Push image to registry
        docker tag image $IMAGE_URI
        docker push $IMAGE_URI

        # Update vars
        echo "::set-output name=BRANCH::$BRANCH"
        echo "::set-output name=VERSION::$VERSION"

        # Print vars
        echo "::warning docker::BRANCH $BRANCH"
        echo "::warning docker::VERSION $VERSION"

    - name: üí¨ Comment Branch and Version
      uses: peter-evans/create-or-update-comment@v1
      if: github.event.pull_request.merged == true
      with:
        issue-number: ${{ github.event.pull_request.number }}
        body: |
          Docker container is ready!

          BRANCH:
          ```
          ${{ steps.push.outputs.BRANCH }}
          ```
          
          VERSION:
          ```
          ${{ steps.push.outputs.VERSION }}
          ```

    - name: üëã Logout
      run: "docker logout"

  deploy-A-dev-kubernetes:
    if: github.event.pull_request.merged == true
    environment: dev
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: üöÄ Trigger deployment to dev
      run: |
        curl --location --request POST '${{ secrets.ARD_DEPLOYMENT_HOST }}' \
        -s -w "%{http_code}\n" \
        --header 'Authorization: Basic ${{ secrets.ARD_DEPLOYMENT_TOKEN }}' \
        --form 'UMGEBUNG="dev"' \
        --form 'COMPONENT="eventhub-ingest"' \
        --form 'VERSION="${{ needs.docker.outputs.VERSION }}"'

  deploy-B-test-kubernetes:
    if: github.event.pull_request.merged == true
    environment: test
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: üöÄ Trigger deployment to test
      run: |
        curl --location --request POST '${{ secrets.ARD_DEPLOYMENT_HOST }}' \
        -s -w "%{http_code}\n" \
        --header 'Authorization: Basic ${{ secrets.ARD_DEPLOYMENT_TOKEN }}' \
        --form 'UMGEBUNG="test"' \
        --form 'COMPONENT="eventhub-ingest"' \
        --form 'VERSION="${{ needs.docker.outputs.VERSION }}"'

  deploy-C-beta-kubernetes:
    if: github.event.pull_request.merged == true
    environment: beta
    needs: docker
    runs-on: ubuntu-latest
    steps:
    - name: üöÄ Trigger deployment to beta
      run: |
        curl --location --request POST '${{ secrets.ARD_DEPLOYMENT_HOST }}' \
        -s -w "%{http_code}\n" \
        --header 'Authorization: Basic ${{ secrets.ARD_DEPLOYMENT_TOKEN }}' \
        --form 'UMGEBUNG="beta"' \
        --form 'COMPONENT="eventhub-ingest"' \
        --form 'VERSION="${{ needs.docker.outputs.VERSION }}"'
